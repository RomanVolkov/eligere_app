name: Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: macos-15

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Xcode
      run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

    - name: Decode and Import Certificates
      env:
        CERTIFICATE_P12: ${{ secrets.CERTIFICATE_P12 }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
      run: |
        echo "$CERTIFICATE_P12" | base64 --decode > certificate.p12
        security create-keychain -p "" build.keychain
        security import certificate.p12 -k build.keychain -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        security list-keychains -s build.keychain
        security default-keychain -s build.keychain
        security unlock-keychain -p "" build.keychain
        security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

    - name: Decode and Install Provisioning Profile for App
      env:
        PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE_APP }}
      run: |
        echo "$PROVISIONING_PROFILE" | base64 --decode > profile.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        UUID=$(grep UUID -A1 -a profile.mobileprovision | grep -io "[-A-F0-9]\{36\}")
        mv profile.mobileprovision ~/Library/MobileDevice/Provisioning\Profiles/$UUID.mobileprovision


    - name: Decode and Install Provisioning Profile for Agent
      env:
        PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE_AGENT }}
      run: |
        echo "$PROVISIONING_PROFILE" | base64 --decode > profile.mobileprovision
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        UUID=$(grep UUID -A1 -a profile.mobileprovision | grep -io "[-A-F0-9]\{36\}")
        mv profile.mobileprovision ~/Library/MobileDevice/Provisioning\Profiles/$UUID.mobileprovision

    - name: Build DMG
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APP_PASSWORD: ${{ secrets.APP_PASSWORD }}
      run: ./build_dmg.sh

    - name: Get DMG Version
      id: get_version
      run: |
        DMG_NAME=$(ls output/Eligere_*_Installer_compressed.dmg)
        echo "DMG_NAME=${DMG_NAME}" >> $GITHUB_ENV

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.DMG_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
